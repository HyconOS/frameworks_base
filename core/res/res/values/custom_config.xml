<resources>
    <!-- Paths to the libraries that contain device specific key handlers -->
    <string-array name="config_deviceKeyHandlerLibs" translatable="false">
        <item>/system/system_ext/priv-app/TouchGestures/TouchGestures.apk</item>
    </string-array>

    <!-- Names of the key handler classes -->
    <string-array name="config_deviceKeyHandlerClasses" translatable="false">
        <item>com.android.touch.gestures.KeyHandler</item>
    </string-array>

    <!-- Whether to post reset runnable for all clients. Needed for some older
         vendor fingerprint HAL implementations. -->
    <bool name="config_fingerprintPostResetRunnableForAllClients">false</bool>

    <!-- Whether to cleanup fingerprints upon connection to the daemon and when user switches -->
    <bool name="config_cleanupUnusedFingerprints">true</bool>

    <!-- Shows the required view for in-display fingerprint -->
    <bool name="config_supportsInDisplayFingerprint">false</bool>

    <!-- The list of vendor package signatures that should also be considered
         platform signatures, specifically for use on devices with a vendor partition. -->
    <string-array name="config_vendorPlatformSignatures">
    </string-array>

    <!-- Whether to allow process with media UID to access CameraServiceProxy -->
    <bool name="config_allowMediaUidForCameraServiceProxy">false</bool>

    <!-- The list of components which should be automatically disabled for a specific device.
         Note: this MUST not be used to randomly disable components, ask for approval first! -->
    <string-array name="config_deviceDisabledComponents" translatable="false">
    </string-array>

    <!-- The list of components which should be automatically disabled for all devices. -->
    <string-array name="config_globallyDisabledComponents" translatable="false">
    </string-array>

    <!-- The list of components which should be forced to be enabled. -->
    <string-array name="config_forceEnabledComponents" translatable="false">
    </string-array>

    <!-- Older rotation sensors are not setting event.timestamp correctly. Setting to
         true will use SystemClock.elapsedRealtimeNanos() to set timestamp. -->
    <bool name="config_useSystemClockforRotationSensor">false</bool>

    <!-- Is the battery LED intrusive? Used to decide if there should be a disable option -->
    <bool name="config_intrusiveBatteryLed">@bool/config_intrusiveNotificationLed</bool>

    <!-- Whether device has a physical display cutout -->
    <bool name="config_physicalDisplayCutout">false</bool>

    <!-- Whether device has a big physical display cutout -->
    <bool name="config_physicalDisplayCutoutCentered">@bool/config_physicalDisplayCutout</bool>

    <!-- Component name of popup camera service -->
    <string name="config_popUpCameraServiceComponentName" translatable="false"></string>

    <!-- Path to fast charging status file to detect whether an oem fast charger is active -->
    <string name="config_oemFastChargerStatusPath" translatable="false"></string>

    <!-- Expected value from fast charging status file  -->
    <string name="config_oemFastChargerStatusValue" translatable="false"></string>

    <!-- Whether device supports an alt. ambient display -->
    <bool name="config_alt_ambient_display">false</bool>

    <!-- Smart charging -->
    <integer name="config_smartChargingBatteryLevel">80</integer>
    <integer name="config_smartChargingBatteryResumeLevel">60</integer>
    <string name="config_SmartChargingSysfsNode" translatable="false">/sys/class/power_supply/battery/input_suspend</string>
    <string name="config_SmartChargingSuspendValue" translatable="false">0</string>
    <string name="config_SmartChargingResumeValue" translatable="false">1</string> 

    <string-array translatable="false" name="custom_config_globalActionsList">
        <item>emergency</item>
        <item>lockdown</item>
        <item>power</item>
        <item>restart</item>
        <item>screenshot</item> <!--2 buttons nav-->
    </string-array>

    <!-- Screen off delay -->
    <integer name="config_screen_off_delay">1000</integer>

    <!-- Button backlight control. Possible values are:
            0 - Not supported
            1 - Supported, but only on/off mode
            2 - Supported with variable brightness control
    -->
    <integer name="config_deviceSupportsButtonBrightnessControl">0</integer>
    <dimen name="config_buttonBrightnessSettingDefaultFloat">1.0</dimen>

    <!-- Keyboard backlight control. Possible values are:
            0 - Not supported
            1 - Supported, but only on/off mode
            2 - Supported with variable brightness control
    -->
    <integer name="config_deviceSupportsKeyboardBrightnessControl">0</integer>
    <dimen name="config_keyboardBrightnessSettingDefaultFloat">1.0</dimen>

    <!-- Whether device can force navbar disabling -->
    <bool name="config_canForceDisableNavigationBar">false</bool>

    <!-- Whether device supports gestures on fingerprint sensor -->
    <bool name="config_supportsGesturesOnFingerprintSensor">false</bool>

    <!-- Hardware keys present on the device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
            64 - Volume rocker
         For example, a device with Home, Back and Menu keys would set this
         config to 7. -->
    <integer name="config_deviceHardwareKeys">64</integer>

    <!-- Hardware keys present on the device with the ability to wake, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
            64 - Volume rocker
         For example, a device with Home, Back and Menu keys would set this
         config to 7. -->
    <integer name="config_deviceHardwareWakeKeys">64</integer>

    <!-- Control the behavior when the user long presses the back button.
         This needs to match the enums in
         frameworks/base/core/java/com/android/internal/util/custom/hwkeys/DeviceKeysConstants.java.
    -->
    <integer name="config_longPressOnBackBehavior">0</integer>

    <!-- Control the behavior when the user long presses the home button.
         This needs to match the enums in
         frameworks/base/core/java/com/android/internal/util/custom/hwkeys/DeviceKeysConstants.java.
    -->
    <integer name="config_longPressOnHomeBehavior">3</integer>

    <!-- Control the behavior when the user double-taps the home button.
         This needs to match the enums in
         frameworks/base/core/java/com/android/internal/util/custom/hwkeys/DeviceKeysConstants.java.
    -->
    <integer name="config_doubleTapOnHomeBehavior">0</integer>

    <!-- Control the behavior when the user long presses the menu button.
         This needs to match the enums in
         frameworks/base/core/java/com/android/internal/util/custom/hwkeys/DeviceKeysConstants.java.
    -->
    <integer name="config_longPressOnMenuBehavior">2</integer>

    <!-- Control the behavior when the user long presses the app switch button.
         This needs to match the enums in
         frameworks/base/core/java/com/android/internal/util/custom/hwkeys/DeviceKeysConstants.java.
    -->
    <integer name="config_longPressOnAppSwitchBehavior">0</integer>

    <!-- Control the behavior when the user long presses the app switch button.
         This needs to match the enums in
         frameworks/base/core/java/com/android/internal/util/custom/hwkeys/DeviceKeysConstants.java.
    -->
    <integer name="config_pressOnAppSwitchBehavior">2</integer>

    <!-- Control the behavior when the user presses the assist button.
         This needs to match the enums in
         frameworks/base/core/java/com/android/internal/util/custom/hwkeys/DeviceKeysConstants.java.
    -->
    <integer name="config_pressOnAssistBehavior">3</integer>

    <!-- Control the behavior when the user long presses the assist button.
         This needs to match the enums in
         frameworks/base/core/java/com/android/internal/util/custom/hwkeys/DeviceKeysConstants.java.
    -->
    <integer name="config_longPressOnAssistBehavior">4</integer>

    <!-- Indicates that the device has Single-stage Camera key
         (without "Focus" state) instead of Dual-stage. -->
    <bool name="config_singleStageCameraKey">false</bool>

    <!-- If not zero, limits the internal screen recorder's framerate to the set value. -->
    <integer name="config_screenRecorderMaxFramerate">0</integer>

    <!-- Whether device has dash charging support -->
    <bool name="config_hasDashCharger">false</bool>

    <!-- Whether device has warp charging support -->
    <bool name="config_hasWarpCharger">false</bool>

    <!-- Whether device has VOOC charging support -->
    <bool name="config_hasVoocCharger">false</bool>
    
    <!-- FOD icon dim-->
    <bool name="config_targetUsesInKernelDimming">false</bool>

    <!-- Hide FOD while Going to sleep from lockscreen to avoid HBM flicker
	 or FOD Circle hiding after the screen is put to sleep -->
    <bool name="config_hideFodCircleGoingToSleep">false</bool>

    <!-- OnePlus uses a proprietary vibrator hal to utilize the new powerful motor since the
         OnePlus 7 Pro. This HAL expects a different format for the data instead of the usual (ms)
         timing(the duration which the vibrator is expected to vibrate for). -->
    <bool name="config_hasOnePlusHapticMotor">false</bool>

    <!-- Whether device has physical tri state switch -->
    <bool name="config_hasAlertSlider">false</bool>

    <!-- The location of the devices physical tri state switch
         0: Left side
         1: Right side -->
    <integer name="config_alertSliderLocation">0</integer>

    <!-- Whether key handler sends intent when changing slider position -->
    <string name="config_alertSliderIntent"></string>

    <!-- Enable face auth only when swiping security view -->
    <bool name="config_faceAuthOnlyOnSecurityView">false</bool>

    <!-- Defines the sysfs attribute path used by the device
         to enable/disable DC dimming. -->
    <string name="config_deviceDcDimmingSysfsNode"></string>

    <!-- Default fod pressed color -->
    <integer name="config_fod_pressed_color">1</integer>

    <integer name="config_ambientNotificationDefaultColor">0xFF3980FF</integer>

    <!-- Whether device supports in-display fingerprint when screen is turned off -->
    <bool name="config_supportsScreenOffInDisplayFingerprint">false</bool>
</resources>
